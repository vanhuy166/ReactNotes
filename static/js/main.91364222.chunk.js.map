{"version":3,"sources":["components/AddNote/index.tsx","components/Header/index.tsx","components/Note/index.tsx","components/NotesList/index.tsx","components/Search/index.tsx","App.tsx","index.tsx"],"names":["AddNote","props","useState","noteText","setNoteText","className","cols","rows","placeholder","onChange","event","target","value","length","onClick","trim","handleAddNote","Header","handleToggleDarkMode","previousDarkMode","Note","text","date","handleDelete","id","icon","faTrashCan","NotesList","notes","map","note","Search","handleSearch","faMagnifyingGlass","type","App","savedNotes","localStorage","getItem","JSON","parse","setNotes","searchNote","setSearchNote","darkMode","setDarkMode","useEffect","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWA2CeA,MApCf,SAAiBC,GACf,MAAgCC,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OACE,sBAAKC,UAAU,WAAf,UACE,0BACEC,KAAM,GACNC,KAAM,EACNC,YAAY,4BACZC,SAlBe,SAACC,GAFG,IAGPA,EAAMC,OAAOC,MAAMC,QAAU,GAC3CT,EAAYM,EAAMC,OAAOC,QAiBvBA,MAAOT,IAET,sBAAKE,UAAU,cAAf,UACE,kCAxBmB,IAwBCF,EAASU,OAA7B,gBACA,wBAAQR,UAAU,OAAOS,QAjBP,WAClBX,EAASY,OAAOF,OAAS,IAC3BZ,EAAMe,cAAcb,GACpBC,EAAY,MAcV,yBCVOa,G,MAlBA,SAAChB,GACd,OACE,sBAAKI,UAAU,SAAf,UACE,+BACE,yCADF,YAGA,wBACEA,UAAU,OACVS,QAAS,kBACPb,EAAMiB,sBAAqB,SAACC,GAAD,OAA+BA,MAH9D,8B,oBCgBSC,MAhBf,SAAcnB,GACZ,OACE,sBAAKI,UAAU,OAAf,UACE,+BAAOJ,EAAMoB,OACb,sBAAKhB,UAAU,cAAf,UACE,gCAAQJ,EAAMqB,OACd,cAAC,IAAD,CACER,QAAS,kBAAMb,EAAMsB,aAAatB,EAAMuB,KACxCnB,UAAU,cACVoB,KAAMC,aCODC,G,MAjBG,SAAC1B,GACjB,OACE,sBAAKI,UAAU,aAAf,UACGJ,EAAM2B,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACEN,GAAIM,EAAKN,GAETH,KAAMS,EAAKT,KACXC,KAAMQ,EAAKR,KACXC,aAActB,EAAMsB,cAHfO,EAAKN,OAMd,cAAC,EAAD,CAASR,cAAef,EAAMe,qB,cCCrBe,MAff,YAA0C,IAAxBC,EAAuB,EAAvBA,aAChB,OACE,sBAAK3B,UAAU,SAAf,UACE,sBAAMA,UAAU,cAAhB,SACE,cAAC,IAAD,CAAiBoB,KAAMQ,QAEzB,uBACEC,KAAK,OACL1B,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAWsB,EAAatB,EAAMC,OAAOC,cCsCxCuB,MAnDf,WACE,MAAyBjC,oBAAmB,WAExC,IAAMkC,EAAYC,aAAaC,QAAQ,wBACvC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,MANb,mBAAOR,EAAP,KAAca,EAAd,KASA,EAAoCvC,mBAAiB,IAArD,mBAAOwC,EAAP,KAAmBC,EAAnB,KACA,EAAgCzC,oBAAkB,GAAlD,mBAAO0C,EAAP,KAAiBC,EAAjB,KAqBA,OAnBAC,qBAAU,WACRT,aAAaU,QAAQ,uBAAwBR,KAAKS,UAAUpB,MAC3D,CAACA,IAkBF,qBAAKvB,UAAS,UAAKuC,GAAY,aAA/B,SACE,sBAAKvC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQa,qBAAsB2B,IAE9B,cAAC,EAAD,CAAQb,aAAcW,IAEtB,cAAC,EAAD,CACEf,MAAOA,EAAMqB,QAAO,SAACnB,GAAD,OAClBA,EAAKT,KAAK6B,cAAcC,SAAST,MAEnC1B,cA1BQ,SAACK,GACf,IAAMC,EAAO,IAAI8B,KACXC,EAAU,CACd7B,GAAI8B,cACJjC,KAAMA,EACNC,KAAMA,EAAKiC,sBAEPC,EAAQ,sBAAO5B,GAAP,CAAcyB,IAC5BZ,EAASe,IAmBHjC,aAhBa,SAACC,GACpB,IAAMgC,EAAW5B,EAAMqB,QAAO,SAACnB,GAAD,OAAcA,EAAKN,KAAOA,KACxDiB,EAASe,YC9BbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.91364222.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.scss\";\n\ninterface Iprops{\n  handleAddNote: any;\n}\n\nfunction AddNote(props:Iprops) {\n  const [noteText, setNoteText] = useState<string>(\"\");\n\n  const charLimit:number = 300;\n\n  const handleChange = (event : any) => {\n    if (charLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value);\n    }\n  };\n\n  const handleSaveClick = () => {\n    if (noteText.trim().length > 0) {\n      props.handleAddNote(noteText);\n      setNoteText(\"\");\n    }\n  };\n  return (\n    <div className=\"note new\">\n      <textarea\n        cols={10}\n        rows={8}\n        placeholder=\"Type to add a new note...\"\n        onChange={handleChange}\n        value={noteText}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>{charLimit - noteText.length} Remaining</small>\n        <button className=\"save\" onClick={handleSaveClick}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddNote;\n","import React from \"react\";\nimport \"./styles.scss\";\n\ninterface Iprops {\n  handleToggleDarkMode: any,\n}\n\nconst Header = (props: Iprops) => {\n  return (\n    <div className=\"header\">\n      <h1>\n        <span>React</span> Notes\n      </h1>\n      <button\n        className=\"save\"\n        onClick={() =>\n          props.handleToggleDarkMode((previousDarkMode:boolean) => !previousDarkMode)\n        }\n      >\n        Toggle Mode\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashCan } from \"@fortawesome/free-regular-svg-icons\";\n\nimport \"./styles.scss\";\n\ninterface Iprops{\n  id:string,\n  text:string,\n  date:string,\n  handleDelete:any,\n}\n\nfunction Note(props:Iprops) {\n  return (\n    <div className=\"note\">\n      <span>{props.text}</span>\n      <div className=\"note-footer\">\n        <small>{props.date}</small>\n        <FontAwesomeIcon\n          onClick={() => props.handleDelete(props.id)}\n          className=\"delete-icon\"\n          icon={faTrashCan}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"../Note\";\nimport AddNote from \"../AddNote\";\n\nimport \"./styles.scss\";\n\ninterface Irops{\n  notes: object[];\n  handleAddNote:any;\n  handleDelete:any;\n}\n\nconst NotesList = (props:Irops) => {\n  return (\n    <div className=\"notes-list\">\n      {props.notes.map((note:any) => (\n        <Note\n          id={note.id}\n          key={note.id}\n          text={note.text}\n          date={note.date}\n          handleDelete={props.handleDelete}\n        />\n      ))}\n      <AddNote handleAddNote={props.handleAddNote} />\n    </div>\n  );\n};\n\nexport default NotesList;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./styles.scss\";\n\ninterface Irops {\n  handleSearch: any;\n}\n\nfunction Search({ handleSearch }: Irops) {\n  return (\n    <div className=\"search\">\n      <span className=\"icon-search\">\n        <FontAwesomeIcon icon={faMagnifyingGlass} />\n      </span>\n      <input\n        type=\"text\"\n        placeholder=\"Search for your notes...\"\n        onChange={(event) => handleSearch(event.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport \"./App.scss\";\nimport { NotesList, Header, Search } from \"./components\";\n\nfunction App() {\n  const [notes, setNotes] =useState<object[]>(() => {\n\n      const savedNotes =localStorage.getItem(\"react-notes-app-data\");\n      if (savedNotes) {\n        return JSON.parse(savedNotes);\n      } else {\n        return [];\n      }\n    });\n  const [searchNote, setSearchNote] = useState<string>(\"\");\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text:string) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deletingNote = (id:string) => {\n    const newNotes = notes.filter((note:any) => note.id !== id);\n    setNotes(newNotes);\n  };\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n\n        <Search handleSearch={setSearchNote} />\n\n        <NotesList\n          notes={notes.filter((note:any) =>\n            note.text.toLowerCase().includes(searchNote)\n          )}\n          handleAddNote={addNote}\n          handleDelete={deletingNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}